<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xmlns:context="http://www.springframework.org/schema/context"
	xmlns:p="http://www.springframework.org/schema/p"
	xmlns:batch="http://www.springframework.org/schema/batch"
	xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans-3.2.xsd
		http://www.springframework.org/schema/batch http://www.springframework.org/schema/batch/spring-batch.xsd
		http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context-3.2.xsd">


	<batch:job id="bundleDataExceptionsJob">
		<batch:description> This is used to bundle data exceptions where task has not been created for it.</batch:description>
		<batch:step id="bundleDataExceptionsJob.onlyStep">
			<batch:tasklet>
				<batch:chunk commit-interval="25">
					<batch:reader>
						<bean class="org.springframework.batch.item.database.JdbcCursorItemReader">
							<property name="sql">
								<value>select source_system_row_key,source_system_col_name, source_system_code,candidate_resp_type, candidate_resp_reference, implementation_code from #{r2dqSchema}.data_exception where task_id is null and implementation_code &lt;&gt; 'PassThrough'
										group by  source_system_code, source_system_row_key, source_system_col_name, candidate_resp_type, candidate_resp_reference,implementation_code</value>
							</property>
							<property name="dataSource" ref="dataSource"/>
							<property name="rowMapper">
						       <bean class="com.railinc.r2dq.domain.DataExceptionBundleRowMapper"/>
						    </property>
						</bean>
					</batch:reader>
						<batch:writer>
							<bean class="org.springframework.batch.item.adapter.ItemWriterAdapter" p:targetMethod="createTask" p:targetObject-ref="taskService"/>
						</batch:writer>
				</batch:chunk>
			</batch:tasklet>		
		</batch:step>
	</batch:job>

</beans>